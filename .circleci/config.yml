version: 2.1

executors:
  gcc:
    docker:
    - image: teeks99/gcc-ubuntu:10
      environment:
        CXX: g++-10
        CC: gcc-10
  clang:
    docker:
    - image: teeks99/clang-ubuntu:5
      environment:
        CXX: clang++-5.0
        CC: clang-5.0
        CONFIG_FLAGS: -D CMAKE_CXX_EXTENSIONS=OFF

commands:
  add_cmake_apt_repo:
    steps:
    - run: apt-get update -qq
    - run: apt-get install -y lsb-release apt-transport-https ca-certificates
        gnupg software-properties-common wget
    - run: wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc
        2>/dev/null | gpg --dearmor - > /etc/apt/trusted.gpg.d/kitware.gpg
    - run: apt-add-repository
        "deb https://apt.kitware.com/ubuntu/ $(lsb_release -sc) main"
  install_packages:
    steps:
    - run: apt-get update -qq
    - run: apt-get install -y cmake ninja-build git
  configure:
    parameters:
      build_type: { type: string }
    steps:
    - run: cmake -S . -B build -G Ninja $CONFIG_FLAGS
        -D CMAKE_BUILD_TYPE=<<parameters.build_type>>
  build:
    steps:
    - run: cmake --build build
  test:
    steps:
    - run:
        command: ctest --output-on-failure
        working_directory: build

jobs:
  build_latest_cpp17:
    parameters:
      docker: { type: string }
      build_type: { type: string }
    executor: <<parameters.docker>>
    steps:
    - when:
        condition: { equal: [clang, <<parameters.docker>>] }
        steps: [add_cmake_apt_repo]
    - install_packages
    - checkout
    - configure: { build_type: <<parameters.build_type>> }
    - build
    - test

workflows:
  build_and_test:
    jobs:
    - build_latest_cpp17:
        matrix:
          parameters:
            docker: [gcc, clang]
            build_type: [Release]
